using api.Data;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using ClosedXML.Excel;
using api.Models;
using Microsoft.EntityFrameworkCore;

namespace api.Report
{
    public class SurveyExcelExporter
    {
        private readonly ApplicationDbContext _context;
        public SurveyExcelExporter(ApplicationDbContext context)
        {
            _context = context;
        }

        public MemoryStream ExportSurveyResponsesToExcel(int surveyId)
        {
            var questions = _context.Questions
                .Where(q => q.SurveyId == surveyId)
                .OrderBy(q => q.Order)
                .ToList();
            var responses = _context.Responses
                .Include(r => r.Answers)
                .Where(r => r.SurveyId == surveyId)
                .ToList();
            var options = _context.Options.ToList();

            var workbook = new XLWorkbook();
            var worksheet = workbook.Worksheets.Add("SurveyResponses");

            // Set font Unicode cho toàn bộ sheet
            worksheet.Style.Font.FontName = "Arial";

            // Header
            worksheet.Cell(1, 1).Value = "Mã phản hồi";
            worksheet.Cell(1, 2).Value = "Ngày gửi";
            for (int i = 0; i < questions.Count; i++)
            {
                worksheet.Cell(1, i + 3).Value = $"Q{i + 1}. {questions[i].Content}";
            }
            worksheet.Row(1).Style.Font.Bold = true;

            // Data
            int row = 2;
            foreach (var response in responses)
            {
                worksheet.Cell(row, 1).Value = response.Id;
                worksheet.Cell(row, 2).Value = response.SubmittedAt;
                worksheet.Cell(row, 2).Style.DateFormat.Format = "dd/MM/yyyy HH:mm:ss";
                for (int i = 0; i < questions.Count; i++)
                {
                    var q = questions[i];
                    var answer = response.Answers.FirstOrDefault(a =>
                        (a.QuestionId == q.Id || a.QuestionIdBackup == q.Id));
                    if (answer != null)
                    {
                        // Ưu tiên AnswerContent
                        if (!string.IsNullOrEmpty(answer.AnswerContent))
                        {
                            worksheet.Cell(row, i + 3).Value = answer.AnswerContent;
                        }
                        else if (!string.IsNullOrEmpty(answer.TextAnswer))
                        {
                            worksheet.Cell(row, i + 3).Value = answer.TextAnswer;
                        }
                        else if (!string.IsNullOrEmpty(answer.ExtraOptionIdsBackup))
                        {
                            // MultiChoice: lấy nội dung các option
                            var ids = answer.ExtraOptionIdsBackup.Split(',', StringSplitOptions.RemoveEmptyEntries);
                            var optionContents = options.Where(o => ids.Contains(o.Id.ToString())).Select(o => o.Content);
                            worksheet.Cell(row, i + 3).Value = string.Join(", ", optionContents);
                        }
                        else if (answer.OptionIdBackup.HasValue)
                        {
                            var opt = options.FirstOrDefault(o => o.Id == answer.OptionIdBackup.Value);
                            if (opt != null) worksheet.Cell(row, i + 3).Value = opt.Content;
                        }
                        // Nếu là số, set kiểu số
                        if (int.TryParse(worksheet.Cell(row, i + 3).Value.ToString(), out int num))
                        {
                            worksheet.Cell(row, i + 3).Value = num;
                            worksheet.Cell(row, i + 3).Style.NumberFormat.Format = "0";
                        }
                    }
                    else
                    {
                        worksheet.Cell(row, i + 3).Value = "";
                    }
                }
                row++;
            }

            // AutoFit độ rộng cột
            worksheet.Columns().AdjustToContents();

            var stream = new MemoryStream();
            workbook.SaveAs(stream);
            stream.Position = 0;
            return stream;
        }
    }
}
